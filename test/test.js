// Generated by CoffeeScript 1.10.0
(function() {
  var app, assert, async, client, express, expressRedisLock, redis, staticValue, supertest, test;

  assert = require('assert');

  express = require('express');

  redis = require('redis');

  supertest = require('supertest');

  async = require('async');

  expressRedisLock = require('../index');

  app = express();

  client = redis.createClient();

  staticValue = 0;

  app.use(expressRedisLock(client));

  app.get('/no-lock', function(req, res, next) {
    return next();
  });

  app.get('/lock', function(req, res, next) {
    return res.lock('test', next);
  });

  app.all('*', function(req, res, next) {
    staticValue++;
    return setTimeout(function() {
      return res.send({
        value: staticValue
      });
    }, 100);
  });

  test = supertest(app);

  describe('lock testing', function() {
    it('should return invalid results for no-lock', function(done) {
      staticValue = 0;
      return async.times(10, function(n, cb) {
        return test.get('/no-lock').expect(200).expect({
          value: 10
        }).end(cb);
      }, done);
    });
    return it('should return valid results for lock', function(done) {
      staticValue = 0;
      return async.times(10, function(n, cb) {
        return test.get('/lock').expect(200).expect({
          value: n + 1
        }).end(cb);
      }, done);
    });
  });

}).call(this);
